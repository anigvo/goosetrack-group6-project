{"version":3,"file":"static/js/189.8764b4d0.chunk.js","mappings":"yOAwDA,UAhDqB,SAAHA,GAA4B,IAAtBC,EAAcD,EAAdC,eAChBC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAMF,EAAAA,EAAAA,IAAYG,EAAAA,IAClBC,GAAOJ,EAAAA,EAAAA,IAAYK,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRZ,EAAe,WACjB,GAAG,CAACA,IAEJ,IAAAa,GAAoCC,EAAAA,EAAAA,UAAS,SAAQC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA2BL,EAAAA,EAAAA,UAASX,GAA7BiB,GAAmCJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnB,GACvBE,GAA0BP,EAAAA,EAAAA,UAASN,GAA5Bc,GAAiCN,EAAAA,EAAAA,GAAAK,EAAA,GAAlB,IAEtBT,EAAAA,EAAAA,YAAU,WACW,UAAfK,GACFP,GAASa,EAAAA,EAAAA,IAAa,UACtBtB,EAAS,mBAADuB,OAAoBrB,KACJ,QAAfc,IACTP,GAASa,EAAAA,EAAAA,IAAa,QACtBtB,EAAS,iBAADuB,OAAkBlB,IAE9B,GAAG,CAACL,EAAUgB,EAAYX,EAAKH,EAAOO,IAEtC,IAAMe,EAAY,SAAAC,GAEhB,QAAIA,EADgB,IAAIC,KAAKL,EAAiBF,EAAkB,GAKlE,EAEA,OACEQ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CACdf,WAAYA,EACZgB,aAAcf,EACdO,UAAWA,EACXS,KAAM,cAERH,EAAAA,EAAAA,KAACI,EAAAA,SAAQ,CAACC,UAAUL,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,KAAM,aAAeR,UAC/CC,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CAACC,QAAS,CAACtB,EAAeO,SAIzC,C,4GCrBA,EAdiB,CACfgB,MAAMC,EAAAA,EAAAA,GAAkB,CACtBC,QApBc,CAChBC,KAAM,oBACNC,KAAM,cACNC,OAAQ,aACRC,MAAO,cAiBLC,aAAc,SAEhBC,MAAMP,EAAAA,EAAAA,GAAkB,CACtBC,QAlBc,CAChBC,KAAM,gBACNC,KAAM,aACNC,OAAQ,WACRC,MAAO,SAeLC,aAAc,SAEhBE,UAAUR,EAAAA,EAAAA,GAAkB,CAC1BC,QAhBkB,CACpBC,KAAM,yBACNC,KAAM,yBACNC,OAAQ,qBACRC,MAAO,sBAaLC,aAAc,UCLlB,EAZa,CACXG,KAAM,QACNC,eAAgBA,EAAAA,EAChBC,WAAYA,EACZC,eAAgBA,EAAAA,EAChBC,SAAUA,EAAAA,EACVC,MAAOA,EAAAA,EACPC,QAAS,CACPC,aAAc,EACdC,sBAAuB,G","sources":["pages/CalendarPage/CalendarPage.jsx","../node_modules/date-fns/esm/locale/en-GB/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-GB/index.js"],"sourcesContent":["import React, { useState, Suspense, useEffect } from 'react';\nimport { useNavigate, Outlet } from 'react-router-dom';\nimport { CalendarToolbar } from 'layout/CalendarToolbar/CalendarToolbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDay, selectMonth, selectYear } from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { getUserTasks } from 'redux/tasks/operations';\n\nconst CalendarPage = ({ updatePageName }) => {\n  const navigate = useNavigate();\n  const month = useSelector(selectMonth);\n  const day = useSelector(selectDay);\n  const year = useSelector(selectYear);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    updatePageName('Calendar');\n  }, [updatePageName]);\n\n  const [periodType, setPeriodType] = useState('month');\n  const [currentDateMonth] = useState(month);\n  const [currentDateYear] = useState(year);\n\n  useEffect(() => {\n    if (periodType === 'month') {\n      dispatch(getUserTasks('month'));\n      navigate(`/calendar/month/${month}`);\n    } else if (periodType === 'day') {\n      dispatch(getUserTasks('day'));\n      navigate(`/calendar/day/${day}`);\n    }\n  }, [navigate, periodType, day, month, dispatch]);\n\n  const checkDate = data => {\n    const currentDate = new Date(currentDateYear, currentDateMonth, 2);\n    if (data > currentDate) {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <>\n      <CalendarToolbar\n        periodType={periodType}\n        changePeriod={setPeriodType}\n        checkDate={checkDate}\n        page={'calendar'}\n      />\n      <Suspense fallback={<Loader type={'suspense'} />}>\n        <Outlet context={[setPeriodType, checkDate]} />\n      </Suspense>\n    </>\n  );\n};\n\nexport default CalendarPage;\n","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, d MMMM yyyy',\n  long: 'd MMMM yyyy',\n  medium: 'd MMM yyyy',\n  short: 'dd/MM/yyyy'\n};\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'HH:mm'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","import formatDistance from \"../en-US/_lib/formatDistance/index.js\";\nimport formatRelative from \"../en-US/_lib/formatRelative/index.js\";\nimport localize from \"../en-US/_lib/localize/index.js\";\nimport match from \"../en-US/_lib/match/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United Kingdom).\n * @language English\n * @iso-639-2 eng\n * @author Alex [@glintik]{@link https://github.com/glintik}\n */\nvar locale = {\n  code: 'en-GB',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4\n  }\n};\nexport default locale;"],"names":["_ref","updatePageName","navigate","useNavigate","month","useSelector","selectMonth","day","selectDay","year","selectYear","dispatch","useDispatch","useEffect","_useState","useState","_useState2","_slicedToArray","periodType","setPeriodType","_useState3","currentDateMonth","_useState5","currentDateYear","getUserTasks","concat","checkDate","data","Date","_jsxs","_Fragment","children","_jsx","CalendarToolbar","changePeriod","page","Suspense","fallback","Loader","type","Outlet","context","date","buildFormatLongFn","formats","full","long","medium","short","defaultWidth","time","dateTime","code","formatDistance","formatLong","formatRelative","localize","match","options","weekStartsOn","firstWeekContainsDate"],"sourceRoot":""}