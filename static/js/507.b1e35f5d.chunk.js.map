{"version":3,"file":"static/js/507.b1e35f5d.chunk.js","mappings":"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","sources":["components/UserForm/UserForm.styled.jsx","assets/icons/add-avatar.svg","components/UserForm/UserForm.jsx","pages/AccountPage/AccountPage.styled.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["// кольори сторінки юзера\n //  userAvatarBackground: '#FFFFFF',\n//   userAvatarBorder: '#3E85F3',\n//   userAvatarInsideBackground: '#F8F8F8',\n//   userNameTextColor: '#343434',\n//   userInputLabelColor: '#111111',\n//   userInputBorderColor: 'rgba(17, 17, 17, 0.15)',\n//   userInputTextColor: '#111111',\n//   userFillCollor: rgba(62, 133, 243, 0.18);\n\n\n//  userAvatarBackground: '#21222C',\n//   userAvatarBorder: '#3E85F3',\n//   userAvatarInsideBackground: '#171820',\n//   userNameTextColor: '#FFFFFF',\n//   userInputLabelColor: 'rgba(250, 250, 250, 0.3)',\n//   userInputBorderColor: 'rgba(255, 255, 255, 0.15)',\n//     userInputTextColor: '#FFFFFF',\n//   userFillCollor: rgba(255, 255, 255, 0.18);\n      \n        \n// кольори кнопок (однакові на темній та світлій темах)\n//   btnBackgroundColor: '#3E85F3',\n//   btnTextColor: '#FFFFFF',\n//     btnHoverBackground: '#2B78EF',\n      \nimport styled from \"@emotion/styled\";\nimport { media } from 'utils/queries';\n\nexport const AddAvatarContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 18px;\n\n    ${media('tablet', '')`\n        gap: 14px;\n    `}    \n`;\nexport const AvatarContainer = styled.div`\n    width: 72px;\n    height: 76px;\n    position: absolute;\n\n     ${media('tablet', '')`\n        width: 124px;\n        height: 130px;\n        position: static;\n    `}\n`;\n\nexport const AvatarBox = styled.div`    \n    display: flex;    \n    align-items: center;    \n    justify-content: center;\n    width: 72px;\n    height: 72px;\n    border-radius: 50%;\n    border: 2px solid ${props => props.theme.userAvatarBorder};          \n    background-color: ${props => props.theme.userAvatarInsideBackground};\n    overflow: hidden;\n    position: absolute;\n    bottom: 99px;\n\n     ${media('tablet', '')`\n        width: 124px;\n        height: 124px; \n        position: static;\n    `}\n`;\n\nexport const Avatar = styled.img`     \n    width: 30px;\n    height: 30px;\n    object-fit: cover;\n    fill: ${props => props.theme.userFillCollor};     \n\n    ${media('tablet', '')`\n        width: 48px;\n        height: 48px; \n    `}\n`;\n\nexport const AddImageBox = styled.div`\n    display: flex;    \n    align-items: center;    \n    justify-content: center;  \n      \n    background-color: ${props => props.theme.btnBackgroundColor};\n    overflow: hidden;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    position: relative;\n    left: 43px;  \n    bottom: 32px;\n    \n\n    ${media('tablet', '')`  \n        width: 24px;\n        height: 24px; \n        left: 79px;  \n        bottom: 20px;\n    `}\n`;\n\nexport const AddImage = styled.img`    \n    width: 8px;\n    height: 8px;  \n    \n    ${media('tablet', '')`  \n        width: 18px;\n        height: 18px; \n    `}\n`;\n\nexport const UserInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const UserName = styled.h2`   \n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.29;\n\n    margin-bottom: 4px;\n    color: ${props => props.theme.userNameTextColor};\n\n    ${media('tablet', '')`\n        font-size: 18px;\n        line-height: 1.0;\n\n        margin-bottom: 8px;\n    `}\n`;\n\nexport const Position = styled.p`\n    font-size: 12px;\n    font-weight: 600;\n    line-height: 1.17;\n    color: ${props => props.theme.userInputLabelColor};\n\n     ${media('tablet', '')`\n        font-size: 14px;\n        line-height: 1.29;\n    `}\n`;\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 88px;\n    width: 100%;  \n`;\n\nexport const BoxAllInputs = styled.div`\n    display: flex;\n    flex-direction: column;  \n    gap: 18px; \n\n    ${media('tablet', '')`\n        gap: 24px;\n    `}\n\n    ${media('desktop', '')`        \n        flex-direction: row;\n        gap: 50px;\n    `}  \n`;\n\nexport const ContainerInputs = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n    width: 299px;\n\n    ${media('tablet', '')`\n        gap: 24px;\n        width: 354px;\n    `}\n`;\n\nexport const BoxInput = styled.div`\n`;\n\nexport const InputTitle = styled.h2`    \n    font-size: 12px;\n    line-height: 1.17;\n    margin-bottom: 8px;  \n    color: ${props => props.theme.userInputLabelColor};\n    \n    ${media('tablet', '')`\n        font-size: 14px;\n        line-height: 1.29;\n    `}\n`;\n\nexport const Input = styled.input`\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.29;\n\n    background-color: inherit;\n    border-radius: 8px;       \n    border: 1px solid ${props => props.theme.userInputBorderColor};\n    height: 42px;    \n    width: 100%;\n    padding-left: 14px;\n\n    cursor: pointer;\n    color: ${props => props.theme.userInputTextColor};\n\n    :hover,\n    :focus {\n        border: 1px solid ${props => props.theme.userInputBorderHoverColor};\n    }\n\n     ${media('tablet', '')`\n        font-size: 16px;\n        line-height: 1.125;\n        height: 46px;\n        padding-left: 18px;\n        \n    `}\n`;\n    \nexport const Button = styled.button`\n    font-size: 14px;    \n    font-weight: 600;\n    line-height: 1.29;  \n\n    border: none;\n    font: inherit;\n    cursor: pointer;\n    \n    width: 195px;\n    height: 46px;\n    padding: 0 8px;\n    margin-top: 44px;\n    border-radius: 16px;\n\n    color: ${props => props.theme.btnTextColor};   \n    background-color: ${props => props.theme.btnBackgroundColor};\n    \n    ${media('tablet', '')`\n        width: 262px;\n        height: 48px; \n    `}\n    \n    :hover,\n    :focus {\n        background: ${props => props.theme.btnHoverBackground}; \n        box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    }\n`;\n\n\n\n\n\n\n\n\n\n\n\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAddAvatar(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 3.75V14.25\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.75 9H14.25\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAddAvatar);\nexport default __webpack_public_path__ + \"static/media/add-avatar.66d6b77355c2f7d7deb9efb313766ff0.svg\";\nexport { ForwardRef as ReactComponent };","\n\nimport React from 'react'\n\nimport {AddAvatarContainer, AvatarContainer, AvatarBox, Avatar, AddImageBox, AddImage, UserInfo, UserName, Position, Form, Input, Button, InputTitle, ContainerInputs, BoxAllInputs, BoxInput } from './UserForm.styled';\nimport user from '../../assets/icons/user.svg';\nimport addAvatar from '../../assets/icons/add-avatar.svg';\nexport const UserForm = () => {\n\n    return (\n        <>\n            <AddAvatarContainer>\n                <AvatarContainer>\n                    <AvatarBox>\n                        <Avatar src={user} alt=\"\" />\n                    </AvatarBox>\n                    <AddImageBox>\n                        <AddImage src={addAvatar} alt=\"\" />\n                    </AddImageBox>\n                    \n                </AvatarContainer>\n\n                <UserInfo>\n                    <UserName>Nadiia Doe </UserName>\n                    <Position>User</Position>\n                </UserInfo>                \n            </AddAvatarContainer>\n\n            <Form /*onSubmit={handleSubmit}*/>\n                <BoxAllInputs>\n                    <ContainerInputs>\n                        <BoxInput>\n                            <InputTitle>User Name</InputTitle>\n                            <Input\n                                type=\"text\"\n                                name=\"name\"\n                                required\n                                placeholder=\"Your name\"/>\n                        </BoxInput>                    \n                        \n                        <BoxInput>\n                            <InputTitle>Birthday</InputTitle>\n                            <Input type=\"date\" name=\"date\" />\n                        </BoxInput>\n                        \n                        <BoxInput>\n                            <InputTitle>Email</InputTitle>\n                            <Input type=\"email\" name=\"email\" placeholder=\"Your email\"/>\n                        </BoxInput>\n                    \n                    </ContainerInputs>\n                    <ContainerInputs> \n                        <BoxInput>\n                            <InputTitle>Phone</InputTitle>\n                            <Input\n                                type=\"tel\"\n                                name=\"number\"\n                                pattern=\"\\+?\\d{1,4}?[ .-\\s]?\\(?\\d{1,3}?\\)?[ .-\\s]?\\d{1,4}[ .-\\s]?\\d{1,4}[ .-\\s]?\\d{1,9}\"\n                                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                                //   onChange={handleNumberChange}\n                                label=\"Number\"                                \n                                id=\"outlined-textarea\"\n                                placeholder=\"Add a phone number\"\n                                \n                                //   value={formData.number} \n                                />\n                        </BoxInput>                    \n                    \n                        <BoxInput>\n                            <InputTitle>Skype</InputTitle>\n                            <Input name=\"text\" placeholder=\"Add a skype number\"/>\n                        </BoxInput>\n                    </ContainerInputs>\n                </BoxAllInputs>       \n                \n            </Form>\n            <Button type=\"submit\">\n                Save changes\n            </Button>\n        </>\n     \n\n           \n \n  );\n};\n","import styled from \"@emotion/styled\";\nimport { media } from 'utils/queries';\n\nexport const BoxUserProfile = styled.div` \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: 335px;    \n    padding: 59px 18px 40px 18px;    \n    background-color: ${props => props.theme.userAvatarBackground};\n    border: 1px solid #111;\n    border-radius: 16px;\n    gap: 40px;\n    width: 100%;\n    margin: 31px auto 0;\n     \n    ${media('tablet', '')`\n        max-width: 704px;\n        padding: 40px 175px; \n        margin: 0 auto;       \n    `}\n    ${media('desktop', '')`        \n        max-width: 1087px;\n        max-hight: 752px;\n        \n        gap: 44px;\n        padding: 60px 165px;\n        \n    `}\n`;","import { useEffect } from 'react';\nimport {UserForm} from '../../components/UserForm/UserForm';\n// import { Helmet } from 'react-helmet';\nimport {BoxUserProfile} from './AccountPage.styled';\n\nconst AccountPage = ({ updatePageName }) => {\n  useEffect(() => {\n    updatePageName('User Info');\n  }, [updatePageName]);\n    return (\n      <BoxUserProfile>          \n            <UserForm />\n        </BoxUserProfile>\n  )\n};\n\nexport default AccountPage;\n"],"names":["AddAvatarContainer","styled","_templateObject","_taggedTemplateLiteral","media","_templateObject2","AvatarContainer","_templateObject3","_templateObject4","AvatarBox","_templateObject5","props","theme","userAvatarBorder","userAvatarInsideBackground","_templateObject6","Avatar","_templateObject7","userFillCollor","_templateObject8","AddImageBox","_templateObject9","btnBackgroundColor","_templateObject10","AddImage","_templateObject11","_templateObject12","UserInfo","_templateObject13","UserName","_templateObject14","userNameTextColor","_templateObject15","Position","_templateObject16","userInputLabelColor","_templateObject17","Form","_templateObject18","BoxAllInputs","_templateObject19","_templateObject20","_templateObject21","ContainerInputs","_templateObject22","_templateObject23","BoxInput","_templateObject24","InputTitle","_templateObject25","_templateObject26","Input","_templateObject27","userInputBorderColor","userInputTextColor","userInputBorderHoverColor","_templateObject28","Button","_templateObject29","btnTextColor","_templateObject30","btnHoverBackground","UserForm","_jsxs","_Fragment","children","_jsx","src","user","alt","addAvatar","type","name","required","placeholder","pattern","title","label","id","BoxUserProfile","userAvatarBackground","_ref","updatePageName","useEffect"],"sourceRoot":""}